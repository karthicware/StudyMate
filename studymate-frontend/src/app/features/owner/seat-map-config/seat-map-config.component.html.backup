<div class="seat-map-config-container p-6 max-w-7xl mx-auto">
  <!-- Header -->
  <div class="mb-6">
    <h1 class="text-2xl font-semibold text-gray-900 mb-2 font-heading">Seat Map Configuration</h1>
    <p class="text-gray-600 font-body">Configure seating arrangements and shift timings for your study hall.</p>
  </div>

  <!-- Success Message - Airbnb Style -->
  @if (saveSuccess()) {
    <div class="mb-4 rounded-lg bg-success-50 border border-success-200 p-4">
      <div class="flex">
        <svg class="h-5 w-5 text-success-500 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
        </svg>
        <div class="ml-3">
          <p class="text-sm text-success-700 font-medium">Configuration saved successfully!</p>
        </div>
      </div>
    </div>
  }

  <!-- Error Message - Airbnb Style with Softer Colors -->
  @if (errorMessage()) {
    <div class="mb-6 rounded-xl bg-red-50 border border-red-100 p-4 shadow-sm">
      <div class="flex items-start">
        <svg class="h-5 w-5 text-red-400 flex-shrink-0 mt-0.5" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"/>
        </svg>
        <div class="ml-3 flex-1">
          <p class="text-sm text-red-800 leading-relaxed">{{ errorMessage() }}</p>
        </div>
      </div>
    </div>
  }

  <!-- Main Content Grid -->
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">

    <!-- Seat Map Canvas (Left/Center - spans 2 columns) -->
    <div class="lg:col-span-2">
      <div class="seat-map-panel">
        <div class="flex justify-between items-center mb-4">
          <h2 class="text-xl font-semibold text-gray-900">Seat Map</h2>
          <div class="flex gap-2">
            <button
              (click)="openAddSeatModal()"
              class="btn-light-grey"
              style="color: #da0d64;"
              [disabled]="isLoading()">
              + Add Seat
            </button>
            <button
              (click)="saveSeatConfiguration()"
              class="btn-primary"
              [disabled]="isLoading() || !hasUnsavedChanges()">
              @if (isLoading()) {
                <span>Saving...</span>
              } @else {
                <span>Save Layout</span>
              }
            </button>
          </div>
        </div>

        <div class="seat-map-info">
          Total Seats: <span class="font-semibold">{{ seatCount() }}</span> |
          Drag seats to reposition them on the canvas
        </div>

        <!-- Canvas Area -->
        <div
          class="seat-canvas relative border border-gray-200 rounded-lg bg-gray-50"
          [style.width.px]="canvasWidth"
          [style.height.px]="canvasHeight">

          <!-- Grid Background (optional visual aid) -->
          <div class="absolute inset-0 grid-background"></div>

          <!-- Draggable Seats -->
          @for (seat of seats(); track seat.seatNumber) {
            <div
              cdkDrag
              (cdkDragEnded)="onSeatDragEnded($event, seat)"
              [cdkDragFreeDragPosition]="{ x: seat.xCoord, y: seat.yCoord }"
              class="seat-item absolute cursor-move"
              [class.selected]="selectedSeat()?.seatNumber === seat.seatNumber"
              [class.seat-ladies-only]="seat.isLadiesOnly"
              (click)="selectSeat(seat)">
              <div class="seat-visual">
                <!-- Chair Icon -->
                <svg class="seat-chair-icon" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M7 11v2h10v-2c0-1.86 1.28-3.41 3-3.86V6c0-1.65-1.35-3-3-3H7C5.35 3 4 4.35 4 6v1.14c1.72.45 3 2 3 3.86z"/>
                  <path d="M21 9c-1.1 0-2 .9-2 2v4H5v-4c0-1.1-.9-2-2-2s-2 .9-2 2v5c0 1.1.9 2 2 2h1v1c0 .55.45 1 1 1s1-.45 1-1v-1h12v1c0 .55.45 1 1 1s1-.45 1-1v-1h1c1.1 0 2-.9 2-2v-5c0-1.1-.9-2-2-2z"/>
                </svg>
                <!-- Seat Number Badge -->
                <span class="seat-number-badge">{{ seat.seatNumber }}</span>
              </div>
            </div>
          }

          @if (seats().length === 0) {
            <div class="absolute inset-0 flex items-center justify-center">
              <div class="text-center px-6">
                <svg class="mx-auto h-16 w-16 text-gray-300 mb-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M3 21h18M3 7v1a3 3 0 003 3h12a3 3 0 003-3V7m-18 0V5a2 2 0 012-2h14a2 2 0 012 2v2M3 7h18M6 16h.01M10 16h.01M14 16h.01M18 16h.01" />
                </svg>
                <p class="text-gray-500 text-base font-medium mb-1">Ready to set up your hall?</p>
                <p class="text-gray-400 text-sm">Click <span class="font-semibold text-gray-600">"Add Seat"</span> above to start placing your desks.</p>
              </div>
            </div>
          }
        </div>
      </div>
    </div>

    <!-- Sidebar (Right - 1 column) -->
    <div class="space-y-6">

      <!-- Seat Details Panel -->
      <div class="seat-details-panel">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Seat Details</h3>

        @if (selectedSeat(); as seat) {
          <div class="space-y-3">
            <div>
              <label class="block text-xs font-medium text-gray-700 mb-2">Seat Number</label>
              <input
                type="text"
                [(ngModel)]="editingSeatNumber"
                class="w-full py-3 px-4 rounded-lg border border-gray-400
                       text-base font-normal text-gray-900 placeholder-gray-400
                       transition-all duration-200
                       focus:outline-none focus:border-2 focus:border-black"
                placeholder="e.g., A1" />
            </div>
            <div class="seat-info-item">
              <p class="text-sm text-gray-700"><strong>Position:</strong> X: {{ seat.xCoord }}px, Y: {{ seat.yCoord }}px</p>
              <p class="text-sm text-gray-700"><strong>Status:</strong> {{ seat.status || 'available' }}</p>
            </div>
            <div class="flex items-start space-x-3 p-3 bg-pink-50 rounded-lg border border-pink-200">
              <input
                type="checkbox"
                id="ladiesOnly"
                [(ngModel)]="editingIsLadiesOnly"
                class="mt-1 h-4 w-4 rounded border-gray-300 text-pink-600 focus:ring-pink-500" />
              <div class="flex-1">
                <label for="ladiesOnly" class="block text-sm font-medium text-gray-900 cursor-pointer">
                  Ladies Only Seat
                </label>
                <p class="text-xs text-gray-600 mt-1">
                  Only female users can book this seat
                </p>
              </div>
            </div>
            <div class="flex gap-2">
              <button
                (click)="updateSeatNumber()"
                class="flex-1 btn-primary btn-sm">
                Update
              </button>
              <button
                (click)="deleteSeat(seat)"
                class="flex-1 btn-light-grey btn-sm text-red-600">
                Delete
              </button>
            </div>
            <button
              (click)="cancelSeatEdit()"
              class="w-full btn-light-grey btn-sm text-gray-600">
              Cancel
            </button>
          </div>
        } @else {
          <p class="text-gray-500 text-sm">Click on a seat to view details</p>
        }
      </div>

      <!-- Shift Configuration Panel -->
      <div class="shift-timings-panel">
        <div class="flex justify-between items-center mb-4">
          <h3 class="text-lg font-semibold text-gray-900">Shift Timings</h3>
          <button
            (click)="openShiftModal()"
            class="btn-light-grey btn-sm"
            style="color: #da0d64;">
            + Add
          </button>
        </div>

        <div class="space-y-3">
          @for (shift of shifts(); track $index) {
            <div class="shift-item-enhanced">
              <div class="flex-1">
                <p class="font-semibold text-gray-900 text-sm mb-1">{{ shift.name }}</p>
                <p class="text-sm text-gray-600">{{ shift.startTime }} to {{ shift.endTime }}</p>
              </div>
              <div class="flex gap-2 items-center">
                <button
                  (click)="openShiftModal($index)"
                  class="text-link">
                  Edit
                </button>
                <span class="text-gray-300">|</span>
                <button
                  (click)="deleteShift($index)"
                  class="text-link text-gray-500">
                  Delete
                </button>
              </div>
            </div>
            @if ($index < shifts().length - 1) {
              <div class="border-t border-gray-100"></div>
            }
          }
        </div>

        <button
          (click)="saveShiftConfiguration()"
          class="w-full mt-6 btn-primary py-3"
          [disabled]="isLoading()">
          @if (isLoading()) {
            <span>Saving...</span>
          } @else {
            <span>Save Shifts</span>
          }
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Add Seat Modal -->
@if (showSeatModal()) {
  <div class="modal-overlay fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="modal-content bg-white rounded-lg p-6 max-w-md w-full mx-4">
      <h3 class="text-xl font-semibold text-gray-900 mb-4 font-heading">Add New Seat</h3>

      <div class="mb-4">
        <label class="block text-xs font-medium text-gray-700 mb-2">Seat Number</label>
        <input
          type="text"
          [(ngModel)]="newSeatNumber"
          class="w-full py-3 px-4 rounded-lg border border-gray-400
                 text-base font-normal text-gray-900 placeholder-gray-400
                 transition-all duration-200
                 focus:outline-none focus:border-2 focus:border-black"
          placeholder="e.g., A1"
          (keyup.enter)="addSeat()" />
      </div>

      <div class="flex gap-2">
        <button
          (click)="addSeat()"
          class="flex-1 btn-light-grey"
          style="color: #da0d64;">
          Add Seat
        </button>
        <button
          (click)="showSeatModal.set(false)"
          class="flex-1 btn-light-grey text-gray-600">
          Cancel
        </button>
      </div>
    </div>
  </div>
}

<!-- Shift Modal -->
@if (showShiftModal()) {
  <div class="modal-overlay fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="modal-content bg-white rounded-lg p-6 max-w-md w-full mx-4">
      <h3 class="text-xl font-semibold text-gray-900 mb-4 font-heading">
        {{ editingShiftIndex() !== null ? 'Edit Shift' : 'Add New Shift' }}
      </h3>

      <div class="space-y-4 mb-4">
        <div>
          <label class="block text-xs font-medium text-gray-700 mb-2">Shift Name</label>
          <input
            type="text"
            [(ngModel)]="shiftName"
            class="w-full py-3 px-4 rounded-lg border border-gray-400
                   text-base font-normal text-gray-900 placeholder-gray-400
                   transition-all duration-200
                   focus:outline-none focus:border-2 focus:border-black"
            placeholder="e.g., Morning" />
        </div>

        <div>
          <label class="block text-xs font-medium text-gray-700 mb-2">Start Time</label>
          <input
            type="time"
            [(ngModel)]="shiftStartTime"
            class="w-full py-3 px-4 rounded-lg border border-gray-400
                   text-base font-normal text-gray-900
                   transition-all duration-200
                   focus:outline-none focus:border-2 focus:border-black" />
        </div>

        <div>
          <label class="block text-xs font-medium text-gray-700 mb-2">End Time</label>
          <input
            type="time"
            [(ngModel)]="shiftEndTime"
            class="w-full py-3 px-4 rounded-lg border border-gray-400
                   text-base font-normal text-gray-900
                   transition-all duration-200
                   focus:outline-none focus:border-2 focus:border-black" />
        </div>
      </div>

      <div class="flex gap-2">
        <button
          (click)="saveShift()"
          class="flex-1 btn-light-grey"
          style="color: #da0d64;">
          Save Shift
        </button>
        <button
          (click)="showShiftModal.set(false)"
          class="flex-1 btn-light-grey text-gray-600">
          Cancel
        </button>
      </div>
    </div>
  </div>
}
