# ========================================
# StudyMate Frontend Environment Variables
# ========================================
#
# INSTRUCTIONS:
# 1. Copy this file to .env in the same directory
# 2. Update the values based on your environment
# 3. NEVER commit the .env file to version control
#
# NOTE: Angular doesn't use .env files natively like React
# These variables serve as documentation and reference
# Actual configuration is in src/environments/*.ts files
# ========================================

# ----------------------------------------
# API Configuration
# ----------------------------------------
# Backend API base URL
# Development: Points to local Spring Boot server
API_BASE_URL=http://localhost:8080/api

# Production API URL (update for deployed backend)
# API_BASE_URL=https://api.studymate.com/api

# ----------------------------------------
# Feature Flags
# ----------------------------------------
# Enable debug mode (verbose logging, dev tools)
ENABLE_DEBUG=true

# Enable verbose logging
ENABLE_VERBOSE_LOGGING=true

# ----------------------------------------
# Third-Party Integrations
# ----------------------------------------
# Razorpay configuration (for payment integration)
# RAZORPAY_KEY_ID=rzp_test_xxxxxxxxxx
# RAZORPAY_KEY_SECRET=your-secret-key

# ⚠️  SECURITY WARNING: Never commit payment gateway secrets!

# ----------------------------------------
# Application Configuration
# ----------------------------------------
# Application name
APP_NAME=StudyMate

# Application version
APP_VERSION=1.0.0

# ========================================
# HOW TO USE THESE VARIABLES IN ANGULAR
# ========================================
#
# OPTION 1: Manual Update (Current Approach)
# ------------------------------------------
# Copy values to src/environments/environment.ts:
#
#   export const environment = {
#     production: false,
#     apiBaseUrl: 'http://localhost:8080/api',
#     enableDebug: true,
#     enableVerboseLogging: true
#   };
#
# OPTION 2: Use dotenv with Angular (Advanced)
# ----------------------------------------------
# Install: npm install dotenv-webpack --save-dev
# Configure in angular.json to use custom webpack config
# Reference: https://www.npmjs.com/package/dotenv-webpack
#
# OPTION 3: Use @ngx-env/builder (Recommended for .env support)
# ---------------------------------------------------------------
# Install: npm install @ngx-env/builder --save-dev
# Configure in angular.json
# Access via process.env in code
# Reference: https://github.com/chihab/ngx-env
#
# ========================================
# ENVIRONMENT FILES
# ========================================
#
# Angular uses these files for environment configuration:
#
# - src/environments/environment.ts       (development)
# - src/environments/environment.prod.ts  (production)
#
# Configure build targets in angular.json:
#
#   "configurations": {
#     "production": {
#       "fileReplacements": [{
#         "replace": "src/environments/environment.ts",
#         "with": "src/environments/environment.prod.ts"
#       }]
#     }
#   }
#
# ========================================
# DEPLOYMENT NOTES
# ========================================
#
# For production deployments:
# 1. Update API_BASE_URL to your production backend URL
# 2. Set ENABLE_DEBUG=false
# 3. Set ENABLE_VERBOSE_LOGGING=false
# 4. Configure environment-specific values in hosting platform
#    (Vercel, Netlify, AWS Amplify, etc.)
# 5. Use environment variables in CI/CD pipeline
#
# Example for Vercel:
#   vercel env add API_BASE_URL production
#
# Example for Netlify:
#   netlify env:set API_BASE_URL "https://api.studymate.com/api"
#
# ========================================
